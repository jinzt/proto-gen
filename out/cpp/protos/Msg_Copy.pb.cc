// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/Msg_Copy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protos/Msg_Copy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ResultObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultPlayer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protos_2fMsg_5fCopy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_protos_2fMsg_5fCopy_2eproto() {
  protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protos/Msg_Copy.proto");
  GOOGLE_CHECK(file != NULL);
  ResultObject_descriptor_ = file->message_type(0);
  static const int ResultObject_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, death_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, heal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, damage_),
  };
  ResultObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultObject_descriptor_,
      ResultObject::default_instance_,
      ResultObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResultObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, _is_default_instance_));
  ResultPlayer_descriptor_ = file->message_type(1);
  static const int ResultPlayer_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, death_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, heal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, damage_),
  };
  ResultPlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultPlayer_descriptor_,
      ResultPlayer::default_instance_,
      ResultPlayer_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResultPlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protos_2fMsg_5fCopy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultObject_descriptor_, &ResultObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultPlayer_descriptor_, &ResultPlayer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protos_2fMsg_5fCopy_2eproto() {
  delete ResultObject::default_instance_;
  delete ResultObject_reflection_;
  delete ResultPlayer::default_instance_;
  delete ResultPlayer_reflection_;
}

void protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025protos/Msg_Copy.proto\"\220\001\n\014ResultObject"
    "\022\020\n\010ObjectID\030\001 \001(\004\022\017\n\007ActorID\030\002 \001(\005\022\022\n\nO"
    "bjectType\030\003 \001(\005\022\016\n\006Result\030\004 \001(\005\022\014\n\004Kill\030"
    "\005 \001(\005\022\r\n\005Death\030\006 \001(\005\022\014\n\004Heal\030\007 \001(\005\022\016\n\006Da"
    "mage\030\010 \001(\005\"\220\001\n\014ResultPlayer\022\020\n\010ObjectID\030"
    "\001 \001(\004\022\017\n\007ActorID\030\002 \001(\005\022\022\n\nObjectType\030\003 \001"
    "(\005\022\016\n\006Result\030\004 \001(\005\022\014\n\004Kill\030\005 \001(\005\022\r\n\005Deat"
    "h\030\006 \001(\005\022\014\n\004Heal\030\007 \001(\005\022\016\n\006Damage\030\010 \001(\005b\006p"
    "roto3", 325);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/Msg_Copy.proto", &protobuf_RegisterTypes);
  ResultObject::default_instance_ = new ResultObject();
  ResultPlayer::default_instance_ = new ResultPlayer();
  ResultObject::default_instance_->InitAsDefaultInstance();
  ResultPlayer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protos_2fMsg_5fCopy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protos_2fMsg_5fCopy_2eproto {
  StaticDescriptorInitializer_protos_2fMsg_5fCopy_2eproto() {
    protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto();
  }
} static_descriptor_initializer_protos_2fMsg_5fCopy_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultObject::kObjectIDFieldNumber;
const int ResultObject::kActorIDFieldNumber;
const int ResultObject::kObjectTypeFieldNumber;
const int ResultObject::kResultFieldNumber;
const int ResultObject::kKillFieldNumber;
const int ResultObject::kDeathFieldNumber;
const int ResultObject::kHealFieldNumber;
const int ResultObject::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultObject::ResultObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultObject)
}

void ResultObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResultObject::ResultObject(const ResultObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultObject)
}

void ResultObject::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  objectid_ = GOOGLE_ULONGLONG(0);
  actorid_ = 0;
  objecttype_ = 0;
  result_ = 0;
  kill_ = 0;
  death_ = 0;
  heal_ = 0;
  damage_ = 0;
}

ResultObject::~ResultObject() {
  // @@protoc_insertion_point(destructor:ResultObject)
  SharedDtor();
}

void ResultObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultObject_descriptor_;
}

const ResultObject& ResultObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto();
  return *default_instance_;
}

ResultObject* ResultObject::default_instance_ = NULL;

ResultObject* ResultObject::New(::google::protobuf::Arena* arena) const {
  ResultObject* n = new ResultObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultObject::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResultObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResultObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objectid_, damage_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResultObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ObjectType;
        break;
      }

      // optional int32 ObjectType = 3;
      case 3: {
        if (tag == 24) {
         parse_ObjectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objecttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Result;
        break;
      }

      // optional int32 Result = 4;
      case 4: {
        if (tag == 32) {
         parse_Result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Kill;
        break;
      }

      // optional int32 Kill = 5;
      case 5: {
        if (tag == 40) {
         parse_Kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Death;
        break;
      }

      // optional int32 Death = 6;
      case 6: {
        if (tag == 48) {
         parse_Death:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &death_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Heal;
        break;
      }

      // optional int32 Heal = 7;
      case 7: {
        if (tag == 56) {
         parse_Heal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Damage;
        break;
      }

      // optional int32 Damage = 8;
      case 8: {
        if (tag == 64) {
         parse_Damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultObject)
  return false;
#undef DO_
}

void ResultObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultObject)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objectid(), output);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objecttype(), output);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kill(), output);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->death(), output);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heal(), output);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->damage(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResultObject)
}

::google::protobuf::uint8* ResultObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultObject)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objectid(), target);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objecttype(), target);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kill(), target);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->death(), target);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heal(), target);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->damage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResultObject)
  return target;
}

int ResultObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ResultObject)
  int total_size = 0;

  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objecttype());
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kill());
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->death());
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heal());
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResultObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultObject)
    MergeFrom(*source);
  }
}

void ResultObject::MergeFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.objecttype() != 0) {
    set_objecttype(from.objecttype());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.death() != 0) {
    set_death(from.death());
  }
  if (from.heal() != 0) {
    set_heal(from.heal());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void ResultObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultObject::CopyFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultObject::IsInitialized() const {

  return true;
}

void ResultObject::Swap(ResultObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultObject::InternalSwap(ResultObject* other) {
  std::swap(objectid_, other->objectid_);
  std::swap(actorid_, other->actorid_);
  std::swap(objecttype_, other->objecttype_);
  std::swap(result_, other->result_);
  std::swap(kill_, other->kill_);
  std::swap(death_, other->death_);
  std::swap(heal_, other->heal_);
  std::swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultObject_descriptor_;
  metadata.reflection = ResultObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultObject

// optional uint64 ObjectID = 1;
void ResultObject::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ResultObject::objectid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectID)
  return objectid_;
}
 void ResultObject::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ObjectID)
}

// optional int32 ActorID = 2;
void ResultObject::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 ResultObject::actorid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ActorID)
  return actorid_;
}
 void ResultObject::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ActorID)
}

// optional int32 ObjectType = 3;
void ResultObject::clear_objecttype() {
  objecttype_ = 0;
}
 ::google::protobuf::int32 ResultObject::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectType)
  return objecttype_;
}
 void ResultObject::set_objecttype(::google::protobuf::int32 value) {
  
  objecttype_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ObjectType)
}

// optional int32 Result = 4;
void ResultObject::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 ResultObject::result() const {
  // @@protoc_insertion_point(field_get:ResultObject.Result)
  return result_;
}
 void ResultObject::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Result)
}

// optional int32 Kill = 5;
void ResultObject::clear_kill() {
  kill_ = 0;
}
 ::google::protobuf::int32 ResultObject::kill() const {
  // @@protoc_insertion_point(field_get:ResultObject.Kill)
  return kill_;
}
 void ResultObject::set_kill(::google::protobuf::int32 value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Kill)
}

// optional int32 Death = 6;
void ResultObject::clear_death() {
  death_ = 0;
}
 ::google::protobuf::int32 ResultObject::death() const {
  // @@protoc_insertion_point(field_get:ResultObject.Death)
  return death_;
}
 void ResultObject::set_death(::google::protobuf::int32 value) {
  
  death_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Death)
}

// optional int32 Heal = 7;
void ResultObject::clear_heal() {
  heal_ = 0;
}
 ::google::protobuf::int32 ResultObject::heal() const {
  // @@protoc_insertion_point(field_get:ResultObject.Heal)
  return heal_;
}
 void ResultObject::set_heal(::google::protobuf::int32 value) {
  
  heal_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Heal)
}

// optional int32 Damage = 8;
void ResultObject::clear_damage() {
  damage_ = 0;
}
 ::google::protobuf::int32 ResultObject::damage() const {
  // @@protoc_insertion_point(field_get:ResultObject.Damage)
  return damage_;
}
 void ResultObject::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Damage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultPlayer::kObjectIDFieldNumber;
const int ResultPlayer::kActorIDFieldNumber;
const int ResultPlayer::kObjectTypeFieldNumber;
const int ResultPlayer::kResultFieldNumber;
const int ResultPlayer::kKillFieldNumber;
const int ResultPlayer::kDeathFieldNumber;
const int ResultPlayer::kHealFieldNumber;
const int ResultPlayer::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultPlayer::ResultPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultPlayer)
}

void ResultPlayer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResultPlayer::ResultPlayer(const ResultPlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultPlayer)
}

void ResultPlayer::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  objectid_ = GOOGLE_ULONGLONG(0);
  actorid_ = 0;
  objecttype_ = 0;
  result_ = 0;
  kill_ = 0;
  death_ = 0;
  heal_ = 0;
  damage_ = 0;
}

ResultPlayer::~ResultPlayer() {
  // @@protoc_insertion_point(destructor:ResultPlayer)
  SharedDtor();
}

void ResultPlayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultPlayer_descriptor_;
}

const ResultPlayer& ResultPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fMsg_5fCopy_2eproto();
  return *default_instance_;
}

ResultPlayer* ResultPlayer::default_instance_ = NULL;

ResultPlayer* ResultPlayer::New(::google::protobuf::Arena* arena) const {
  ResultPlayer* n = new ResultPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultPlayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResultPlayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResultPlayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objectid_, damage_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResultPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ObjectType;
        break;
      }

      // optional int32 ObjectType = 3;
      case 3: {
        if (tag == 24) {
         parse_ObjectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objecttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Result;
        break;
      }

      // optional int32 Result = 4;
      case 4: {
        if (tag == 32) {
         parse_Result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Kill;
        break;
      }

      // optional int32 Kill = 5;
      case 5: {
        if (tag == 40) {
         parse_Kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Death;
        break;
      }

      // optional int32 Death = 6;
      case 6: {
        if (tag == 48) {
         parse_Death:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &death_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Heal;
        break;
      }

      // optional int32 Heal = 7;
      case 7: {
        if (tag == 56) {
         parse_Heal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Damage;
        break;
      }

      // optional int32 Damage = 8;
      case 8: {
        if (tag == 64) {
         parse_Damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultPlayer)
  return false;
#undef DO_
}

void ResultPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultPlayer)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objectid(), output);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objecttype(), output);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kill(), output);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->death(), output);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heal(), output);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->damage(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResultPlayer)
}

::google::protobuf::uint8* ResultPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultPlayer)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objectid(), target);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objecttype(), target);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kill(), target);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->death(), target);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heal(), target);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->damage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResultPlayer)
  return target;
}

int ResultPlayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ResultPlayer)
  int total_size = 0;

  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objecttype());
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kill());
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->death());
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heal());
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResultPlayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultPlayer)
    MergeFrom(*source);
  }
}

void ResultPlayer::MergeFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.objecttype() != 0) {
    set_objecttype(from.objecttype());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.death() != 0) {
    set_death(from.death());
  }
  if (from.heal() != 0) {
    set_heal(from.heal());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void ResultPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultPlayer::CopyFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultPlayer::IsInitialized() const {

  return true;
}

void ResultPlayer::Swap(ResultPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultPlayer::InternalSwap(ResultPlayer* other) {
  std::swap(objectid_, other->objectid_);
  std::swap(actorid_, other->actorid_);
  std::swap(objecttype_, other->objecttype_);
  std::swap(result_, other->result_);
  std::swap(kill_, other->kill_);
  std::swap(death_, other->death_);
  std::swap(heal_, other->heal_);
  std::swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultPlayer_descriptor_;
  metadata.reflection = ResultPlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultPlayer

// optional uint64 ObjectID = 1;
void ResultPlayer::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ResultPlayer::objectid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectID)
  return objectid_;
}
 void ResultPlayer::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectID)
}

// optional int32 ActorID = 2;
void ResultPlayer::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::actorid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ActorID)
  return actorid_;
}
 void ResultPlayer::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ActorID)
}

// optional int32 ObjectType = 3;
void ResultPlayer::clear_objecttype() {
  objecttype_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectType)
  return objecttype_;
}
 void ResultPlayer::set_objecttype(::google::protobuf::int32 value) {
  
  objecttype_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectType)
}

// optional int32 Result = 4;
void ResultPlayer::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::result() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Result)
  return result_;
}
 void ResultPlayer::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Result)
}

// optional int32 Kill = 5;
void ResultPlayer::clear_kill() {
  kill_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::kill() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Kill)
  return kill_;
}
 void ResultPlayer::set_kill(::google::protobuf::int32 value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Kill)
}

// optional int32 Death = 6;
void ResultPlayer::clear_death() {
  death_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::death() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Death)
  return death_;
}
 void ResultPlayer::set_death(::google::protobuf::int32 value) {
  
  death_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Death)
}

// optional int32 Heal = 7;
void ResultPlayer::clear_heal() {
  heal_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::heal() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Heal)
  return heal_;
}
 void ResultPlayer::set_heal(::google::protobuf::int32 value) {
  
  heal_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Heal)
}

// optional int32 Damage = 8;
void ResultPlayer::clear_damage() {
  damage_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::damage() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Damage)
  return damage_;
}
 void ResultPlayer::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Damage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
